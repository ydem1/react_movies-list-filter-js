{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/SearchMovie/SearchMovie.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","SearchMovie","query","filterBy","htmlFor","type","onChange","event","currentTarget","value","id","placeholder","normalizationQuery","trim","toLowerCase","App","useState","setQuery","visibleMovies","filter","includes","getPreparedMovies","moviesFromServer","newQuery","ReactDOM","render","document","getElementById"],"mappings":"suEAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,cCNfC,EAAc,SAAC,GAAD,EAAGC,MAAH,IAAUC,EAAV,EAAUA,SAAV,OACzB,sBAAKd,UAAU,cAAf,UACE,uBAAOe,QAAQ,eAAef,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEgB,KAAK,OACLC,SAAU,SAACC,GACTJ,EAASI,EAAMC,cAAcC,QAE/BC,GAAG,eACHrB,UAAU,QACVsB,YAAY,2BCOpB,IAAMC,EAAqB,SAAAV,GAAK,OAAIA,EAAMW,OAAOC,eAEpCC,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOd,EAAP,KAAce,EAAd,KACMC,EAlBR,SAA2BpB,EAAQI,GACjC,MAAc,KAAVA,EACKJ,EAIPA,EACGqB,QAAO,SAAA/B,GAAK,OACXA,EAAMK,MAAMqB,cAAcM,SAASR,EAAmBV,KACnDd,EAAMM,YAAYoB,cAAcM,SAASR,EAAmBV,OAS/CmB,CAAkBC,EAAkBpB,GAE1D,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEa,MAAOA,EACPC,SAAU,SAACoB,GACTN,EAASM,QAKf,cAAC,EAAD,CAAYzB,OAAQoB,OAGtB,qBAAK7B,UAAU,UAAf,mCCtCNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b49f6814.chunk.js","sourcesContent":["import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const SearchMovie = ({ query, filterBy }) => (\n  <div className=\"SearchMovie\">\n    <label htmlFor=\"search-query\" className=\"label\">\n      Search movie\n    </label>\n\n    <div className=\"control\">\n      <input\n        type=\"text\"\n        onChange={(event) => {\n          filterBy(event.currentTarget.value);\n        }}\n        id=\"search-query\"\n        className=\"input\"\n        placeholder=\"Type search word\"\n      />\n    </div>\n  </div>\n);\n","import { useState } from 'react';\n\nimport moviesFromServer from './api/movies.json';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { SearchMovie } from './components/SearchMovie/SearchMovie';\n\nfunction getPreparedMovies(movies, query) {\n  if (query === '') {\n    return movies;\n  }\n\n  return (\n    movies\n      .filter(movie => (\n        movie.title.toLowerCase().includes(normalizationQuery(query))\n        || movie.description.toLowerCase().includes(normalizationQuery(query))\n      ))\n  );\n}\n\nconst normalizationQuery = query => query.trim().toLowerCase();\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getPreparedMovies(moviesFromServer, query);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <div className=\"box\">\n          <SearchMovie\n            query={query}\n            filterBy={(newQuery) => {\n              setQuery(newQuery);\n            }}\n          />\n        </div>\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}